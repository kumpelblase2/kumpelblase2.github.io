<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Posts on Re: boot</title><link>https://blog.eternalwings.de/posts/</link><description>Recent content in Posts on Re: boot</description><generator>Hugo -- 0.142.0</generator><language>en-us</language><lastBuildDate>Sun, 09 Feb 2025 10:00:00 +0200</lastBuildDate><atom:link href="https://blog.eternalwings.de/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Silkroad Online Network Protocol - an introduction</title><link>https://blog.eternalwings.de/posts/2023-05-24-silkroad-packet-format/</link><pubDate>Sun, 09 Feb 2025 10:00:00 +0200</pubDate><guid>https://blog.eternalwings.de/posts/2023-05-24-silkroad-packet-format/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>This is a series of posts about Silkroad Online or, more specifically, about things I encounter when writing my <a href="https://github.com/kumpelblase2/skrillax">skrillax</a> emulator for it. To lay the foundation making the later parts understandable, this introduction provides the basics of the network protocol used in Silkroad Online. None of this is really new information and is simply compiled to provide a self contained explanation.</p>
<p>When designing a (network) protocol, there are a few things you want to strive for. One of the being avoiding ambiguity and another being consistency. You wouldn&rsquo;t want a packet to be parsed differently, depending on the time of day. Or if you want to represent a concept, like a list of something, to be encoded in several different ways. This makes it significantly easier to parse and work with as it allows for a single, simple parsing pass and better reuse of code across different areas. In the following I want to look closer that the protocol used by <a href="https://www.joymax.com/SilKRoaD/">Silkroad Online</a>, but first lets go over some basics.</p>
<h2 id="network-protocols">Network Protocols<a href="#network-protocols" class="anchor" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
      stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path>
      <line x1="8" y1="12" x2="16" y2="12"></line>
   </svg></a></h2>
<p>A network protocol is the schema two parties use to communicate with each other and exchange information. Otherwise, each party would receive a bunch of bytes that they wouldn&rsquo;t know how to use. Just like how a file is essentially just random bytes to anyone unless they know the file format.</p>
<h2 id="basic-block-frames">Basic Block: Frames<a href="#basic-block-frames" class="anchor" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
      stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path>
      <line x1="8" y1="12" x2="16" y2="12"></line>
   </svg></a></h2>
<p>An important building block for network protocols is a basic message, or: frame. It&rsquo;s essentially the most minimal structure of anything in the protocol. Anything less and there&rsquo;d be not enough data to be useful and anything more you&rsquo;d end up with too much situational data. Essentially, once something applies to <em>all</em> messages of a protocol, it&rsquo;s part of the frame. Common things that show up in a frame are the length of the content or the frame itself, and something like a message type. The length is necessary as most underlying protocols (such as TCP) may split one of your frames and spread it over multiple packets or actually send multiple frames inside one packet and the other side needs to know when a frame over in both of these cases. Providing the length, instead of using - e.g. - a delimiter, makes it easier for the receiver to allocate appropriate amounts of memory as it is now possible to know this before reading possibly large amounts of bytes. A kind of message type would define what is to be expected inside the frame, which may have a more complicated structure.</p>
<p>Silkroad does have a pretty decent frame structure:</p>
<div class="highlight" title="Silkroad Frame"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"> 0                   1                   2                   3  
</span></span><span class="line"><span class="cl"> 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
</span></span><span class="line"><span class="cl">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</span></span><span class="line"><span class="cl">|             Length            |             Opcode            |
</span></span><span class="line"><span class="cl">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</span></span><span class="line"><span class="cl">|    Counter    |      CRC      |                               |
</span></span><span class="line"><span class="cl">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +
</span></span><span class="line"><span class="cl">|                                                               |
</span></span><span class="line"><span class="cl">+                              Data                             +
</span></span><span class="line"><span class="cl">|                                                               |
</span></span><span class="line"><span class="cl">+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</span></span></code></pre></div><p>As you can see, it contains very little additional data, but it does contain enough to let a receiver separate the stream of bytes it receives into separate messages. The length specifies the length of the data contained in it, but since the header of the frame has a known length, we can easily calculate the total size of a frame. CRC is a checksum of the content to ensure a bit didn&rsquo;t flip on accident and Counter is a to protect against replay attacks. Both of these are only really sent by the client. The data itself is variable length and depends on the opcode. That opcode specifies what is actually contained in this frame, i.e. the operation to be performed by this packet.</p>
<p>So far so good, but this is not the full story. Silkroad does support encryption of packets so that, for example, the login credentials don&rsquo;t get sent as plain bytes. In Silkroad this is done by masking the <code>Length</code> info with <code>0x8000</code>, such that:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">is_encrypted</span> <span class="o">=</span> <span class="p">(</span><span class="nx">length</span> <span class="o">&amp;</span> <span class="mh">0x8000</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">;</span>
</span></span></code></pre></div><p>The remainder of the frame, including the rest of the header, is then encrypted. One might assume that <code>Length</code> would now identify the encrypted length of the frame, but that would be incorrect. The <code>Length</code> is actually still the length of the cleartext content. That means you need to calculate the encrypted size yourself to figure out how many bytes you&rsquo;ll need to read. Depending on the encryption there might be a 1-to-1 relationship in size <em>or</em> a block cipher is used and is thus a multiple of the block size.</p>
<p>Sikroad is using an old, but still secure<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> cipher: <code>blowfish</code><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. Blowfish has a block length of 8 bytes. If the content + header is smaller than a multiple of 8 bytes, it will be padded to match the 8 byte block length - standard stuff. Thus, the calculation for the length would be something like:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// Since the header is also encrypted, we need to account for that by adding 4. 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">content_length</span> <span class="o">=</span> <span class="nx">length</span> <span class="o">+</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="c1">// `(8 - (content_length % 8))` will return the missing bytes to fill the next 8 byte
</span></span></span><span class="line"><span class="cl"><span class="c1">// block for blowfish.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">padded_length</span> <span class="o">=</span> <span class="nx">content_length</span> <span class="o">+</span> <span class="p">(</span><span class="mi">8</span> <span class="o">-</span> <span class="p">(</span><span class="nx">content_length</span> <span class="o">%</span> <span class="mi">8</span><span class="p">))</span>
</span></span></code></pre></div><p>Assuming, of course, we actually have an encrypted packet. With <code>padded_length + 2</code> we now know the final size of the frame sent. To actually read the content, one would have to know the encryption key. That&rsquo;s for another time - for now we assume we have established a shared secret already.</p>
<p>With this, we can segment every packet stream sent across the wire between the Silkroad client and a server. If you&rsquo;d rather not write this yourself, you can take a look at my <a href="https://crates.io/crates/skrillax-codec">skrillax-codec</a> crate, which can handle this for you.</p>
<h2 id="encryption">Encryption<a href="#encryption" class="anchor" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
      stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path>
      <line x1="8" y1="12" x2="16" y2="12"></line>
   </svg></a></h2>
<p>To also be able to decrypt/encrypt packets, we need to first do a handshake. After the handshake both parties (server and client) will end up with the same shared secret. In the case of Silkroad Online, the server will start the handshake as the first thing when a connection has been established. In most cases, the server requires this handshake to be completed before continuing with the connection and is therefor vital to get correct. The handshake uses the normal frames, which we&rsquo;ve established now, to convey the operations done in the handshake. The flow for the handshake is as follows:</p>
<pre class="mermaid">sequenceDiagram
  participant Client
  participant Server
  Server ->> Client: Public Server Seeds
  Client ->> Server: Mixed Public Client Seeds
  Server ->> Client: Verify Key
  Client ->> Server: Finish
</pre><p>This is very reminiscient of a <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Diffie-Hellman key exchange</a>, just a bit homegrown. Maybe they should&rsquo;ve done that, because due to their setup, they ended up with only 31 bits of actually private material. This is comparatively easy to break on modern systems, taking less than a minute on most desktop computers. So if the key exchange is observed, it is possible to decrypt all packets sent between the client and server for that connection. I actually wrote a tool that does it automatically for any pcap file, which you can find in my <a href="https://github.com/kumpelblase2/skrillax/tree/9d8d5384e2178c6f0f2ba80984284583da901e7c/silkroad-packet-decryptor">skrillax repo</a><sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>I won&rsquo;t cover more details here of what is exactly exchanged in which packet - you can look at the <a href="https://github.com/DummkopfOfHachtenduden/SilkroadDoc/wiki/silkroad-security">documentation</a> compiled by DaxterSoul, originally written by pushedx. I&rsquo;d assume most implementations are at least in part based on that documentation; including <a href="https://github.com/kumpelblase2/skrillax-network/tree/master/crates/skrillax-security">mine</a>.</p>
<h2 id="packet-data">Packet data<a href="#packet-data" class="anchor" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
      stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path>
      <line x1="8" y1="12" x2="16" y2="12"></line>
   </svg></a></h2>
<p>To actually read and write the necessary packets in the handshake, we need to know how we can read the bytes inside a packet. Unlike a self-describing format, if you don&rsquo;t know the structure of the data contained in a packet, you won&rsquo;t be able to parse the packet into a usable structure. Just like how you wouldn&rsquo;t which bytes make up which pixels in an image file without also knowing the format, like png or jpg. And obviously Joymax is not interested in publishing a spec for the individual packets, so it&rsquo;s up to reverse engineering to figure out what the structure could be - for each individual operation. Though there are obviously patterns that one can look for.</p>
<p>A thing of note here is Silkroad uses <a href="https://en.wikipedia.org/wiki/Endianness">little-endian notation</a>, even though in networking it&rsquo;s usually more common to use <a href="https://datatracker.ietf.org/doc/html/rfc1700#page-3">big-endian notation</a>. But with that in mind, we can find most C data types to be represented as their binary in-memory representation, just with little-endian notation. This includes <code>bool</code> (1 byte), <code>char</code> (1 byte), short (2 bytes), int (4 bytes), and float (4 bytes). As example, the short <code>1337</code>, or <code>0x0539</code> in hex, would be represented as <code>[0x39, 0x05]</code> in the packet data. But that is about as much as we can expect; without the self-describing nature, we won&rsquo;t see patterns like field separators or type IDs to show up and help us. Yet, one could feasibly expect that Silkroad isn&rsquo;t just shoving bytes into packets with a clear idea of structure. And most certainly they are serializing their C/C++ structs into packets, just the structure is lost in translation. In other words, the following struct:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">Position</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">short</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">short</span> <span class="n">y</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">Position</span> <span class="n">pos</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">1641</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="mi">3732</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>would end up serialized in the packet data as:</p>
<pre tabindex="0"><code>0x69 0x06 0x94 0x0E
</code></pre><p>Without the structure, this might as well be 4 single byte values or one <code>int</code> value (<code>244581993</code>) - it all depends on the expected structure. There are some things that hint at the size, but these are never a guaranteed indicator. For example, the following byte stream:</p>
<pre tabindex="0"><code>0x01 0x80 0x00 0x00 0x80
</code></pre><p><em>could</em> hint at an <code>int</code> followed by a <code>char</code>/<code>byte</code>, due to the zero bytes being the higher bits of a small number represented by the <code>int</code>. But it might as well be a <code>bool</code> followed by an <code>int</code>. You literally cannot tell just by looking at the bytes alone without context, which makes reverse engineering not a simple task.</p>
<p>Lets move on for now and look at a more complex &ldquo;basic&rdquo; type: a string. While in C, a string is just a series of bytes until a null-byte, it is something that is inherently variable in length. On the reading side, we&rsquo;d prefer if we could know the length ahead of time. Thus, we&rsquo;re nice and start with the length as a <code>short</code>, followed by each character, <em>excluding</em> the null byte. Because of the explicit length, there&rsquo;s no need for a null-byte as a terminator. Thankfully, strings are one of the easier structures to figure out, as most tools display the ascii equivalents next to hex values.
<img src="/string-data-example.png" alt="Example String Sequence, showing a 2 byte length followed by the characters for &lsquo;Skrillax&rsquo;">
Ignoring the <code>0x04</code> byte for now, we can see the length as <code>[0x08 0x00]</code> - so 8 - followed by the text, now clearly visible: &lsquo;Skrillax&rsquo;.</p>
<p>There are even more of such structures, of course, but lets explore them another time.</p>
<h2 id="closing">Closing<a href="#closing" class="anchor" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
      stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path>
      <line x1="8" y1="12" x2="16" y2="12"></line>
   </svg></a></h2>
<p>With this, you should now be able to read and understand the protocol at a basic level. You can check the structure of known packets on the wiki<a href="https://github.com/DummkopfOfHachtenduden/SilkroadDoc/wiki/Global-packets">[1]</a><a href="https://github.com/DummkopfOfHachtenduden/SilkroadDoc/wiki/Gateway-packets">[2]</a><a href="https://github.com/DummkopfOfHachtenduden/SilkroadDoc/wiki/Agent-packets">[3]</a>, though they are for an old version of the game (v1.188). You can also take a look at <a href="https://github.com/kumpelblase2/skrillax-network">skrillax-network</a> which handles all the network related stuff for you, including serialization and deserialization. There&rsquo;s even a <a href="https://github.com/kumpelblase2/skrillax-network/tree/master/examples/simple-official-client">mini client example</a> that will print out all current notices if you want something you can try out yourself right now.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Due to an oversight in the key exchange used in Silkroad it is, however, relatively easy to brute force the secret key.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>More accurately, it&rsquo;s using a version known as &ldquo;blowfish compat&rdquo;, which is blowfish with different endianness.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>I restructured the emulator, causing the decryptor to end up nowhere so this is a deep link into the repo for now. I&rsquo;m trying to find a good way to put it in a new repo as a standalone thing somewhere.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content></item><item><title>Its Been a Long Time</title><link>https://blog.eternalwings.de/posts/2019-12-11-its-been-a-long-time/</link><pubDate>Wed, 11 Dec 2019 17:28:07 +0100</pubDate><guid>https://blog.eternalwings.de/posts/2019-12-11-its-been-a-long-time/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>It&rsquo;s been a long time since I&rsquo;ve posted anything here, in fact it&rsquo;s been more than four years. Actually, it&rsquo;s almost exactly five years since I made the first post. So is it just a coincidence that I just now thought about writing again? Maybe, but I think the situation is a pretty similar to when I wrote that first post. The university semester was on its way to the winter break so lectures were a bit more relaxing, I started spending more time on programming projects again and I found myself in having a bit of free time to do stuff in.</p>
<p>On the outside, not much has changed in from then till now. I&rsquo;m (still) in university, though I finished my bachelors, worked for a few years and now just started my masters degree. I still hang around in the same chatrooms and do small projects here and there that I think would make my life better. I also still like <a href="https://i.imgur.com/cPgFt5W.mp4">gifs</a> <a href="https://i.imgur.com/3P3nEOh.mp4">of</a> <a href="https://i.imgur.com/myYc3r9.mp4">cute</a> <a href="https://i.imgur.com/GLiAwVM.mp4">animals</a> and specifically <a href="https://i.imgur.com/CVsYUNQ.jpg">red</a> <a href="https://i.imgur.com/ANsdnaH.jpg">pandas</a>.</p>
<p>However, there have been quite some drastic changes if you look a bit deeper. For one, I finally moved out and got my own four walls to live in. While this is mostly due to me studying in a far away city, it&rsquo;s still a change I&rsquo;ve been looking forward to. This is one of the bigger changes and one of the most recent ones. While it does feel a bit lonely at times, having no one around also forces me to not be lazy and actually deal with stuff myself. Even though it has only been several weeks, it&rsquo;s already shown progress which makes me happy.</p>
<p>I also remember writing about how <a href="https://blog.eternalwings.de/posts/2015-03-27-the-only-reason-i-cant-love-linux/">I can&rsquo;t like linux</a> yet here I am, using linux full time for over 3 years and I wouldn&rsquo;t want it any other way. But if you asked me if I would still want a program such as little snitch on linux I would definitely say yes. Similar changes happened in my choice of phone OS though with less success. Went to Android for a generation only to go right back after the phone had hardware issues. Anyway, linux has been serving me exceptionally well, specifically having a rolling release distribution makes it much more pleasant than having to do a full system upgrade every now and then which may or may not brick your system. Given that macOS had its fair share of upgrade issues in recent years and windows 10 doesn&rsquo;t even let you manually do updates on your own accord, it certainly is a breath of fresh air to be in full control of your updates. Speaking of full control - being able to chose a more minimal desktop environment or even going with just a window manager has been a great experience, although I&rsquo;m thinking about going back every other month. The customizability and the lack of &ldquo;features&rdquo; just make it worth for me. Given the fact that Steam does contain a big library of games that work natively on linux as well as their ongoing work on proton makes playing games on linux a possibility too.</p>
<p>I&rsquo;ve started playing around with <a href="https://twitter.com/kumpelblase2/status/1146870118879809536">3d printing</a> though because of the move I borked the printer a little and need to get it fixed first before continuing. My love for mechanical keyboards, especially clicky ones, grew in recent time. I experimented a bit using a split keyboard which sadly didn&rsquo;t work out so far (but I won&rsquo;t toss the idea!). Currently in love with the RGB One keyboards from <a href="https://www.duckychannel.com.tw/en">ducky</a> and hope they&rsquo;ll last me for years to come.</p>
<p>To finish off, I&rsquo;ve done some projects over the years that I should mention. <a href="https://github.com/kumpelblase2/proxtop">Proxtop</a> would probably be the biggest one which is sadly falling off the wagon when it comes to time sadly. As most projects, it started a project to make my life easier and hopefully made some other lives easier too. But because I&rsquo;m watching less and less anime, the need wasn&rsquo;t there anymore and thus my enthusiasm for continuing to work on it. Another bigger project has been <a href="https://github.com/kumpelblase2/vima/">Vima</a>, which solves my need to organize <em>many</em> videos in a nice way. I&rsquo;ve been working on a successor to fix some issues with the design of it, but it&rsquo;s not quite there yet, which is why the development has stagnated. Most recently, I started <a href="https://github.com/kumpelblase2/seeker">Seeker</a> to make finding new streams on twitch easier. While it&rsquo;s only very recent, it works pretty well already I&rsquo;d say.</p>
<p>There&rsquo;s a lot more that I haven&rsquo;t covered but I&rsquo;m pretty happy with where I am right now. Excited to see what the next years have in store for me.</p>
]]></content></item><item><title>The only reason I can't love linux</title><link>https://blog.eternalwings.de/posts/2015-03-27-the-only-reason-i-cant-love-linux/</link><pubDate>Fri, 27 Mar 2015 14:04:31 +0100</pubDate><guid>https://blog.eternalwings.de/posts/2015-03-27-the-only-reason-i-cant-love-linux/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>Let me get this straight first, I really like Linux. It&rsquo;s pretty much everything I love about OSX just wrapped up in a more customizable, easier accessible and more diverse operating system. But there&rsquo;s one thing, which is a showstopper for me.</p>
<p>There&rsquo;s on thing I have used since my windows days and continue to use it to this very day on OSX. It&rsquo;s Little Snitch (on Windows it was Zone Alarm). It&rsquo;s the application that I will install first on any new Mac that I&rsquo;d get and I will not be using a computer productively without it. Why? That&rsquo;s quite simple. I want control over what applications can do and can&rsquo;t do while still being able to use the rest of the application without further issues. That&rsquo;s why I prefer iOS over Android as well, as I can deny for example the access to my contacts but don&rsquo;t get locked out of the app completely like I&rsquo;d get in android (where I can either allow everything and install it or just can&rsquo;t even download it). This is the only reasonable behavior to me, why should and app no longer work if I deny only parts of what it needs? Right, I won&rsquo;t be able to use that specific part of the app but I mean, if I block that specific part I have my reasons to not use that feature anyway. For an app to say &ldquo;Sorry, I can&rsquo;t work at all if you don&rsquo;t allow this&rdquo; it really has to be the core feature of it. And for that case, I&rsquo;d be happy to search for a similar app that doesn&rsquo;t necessary require that feature. The same thing applies to network connections. Sometimes it&rsquo;s enough to say &ldquo;You are not allowed to access the internet at all&rdquo; for certain applications like simple editors or other offline applications, but that&rsquo;s not often the case. For example, what about updates? The app should be able to check for those, but here&rsquo;s the catch, ONLY for those. Why should the app be able to connect to isenddatasomewhere.com for updates as well, because it&rsquo;s surely not the right domain to check for updates. However, I might want to allow it for some other application to connect to that domain.</p>
<p>And that&rsquo;s what Little Snitch allows me to do. I can say per application where it is allowed to connect to and where it isn&rsquo;t. And the applications still work, apart from the features I don&rsquo;t allow obviously, which is the goal that I wanted to reach. So Little Snitch is great, I think we got that now. For Windows I mentioned Zonealarm, but I haven&rsquo;t heard of it for some time. As far as I can remember, it worked in a similar fashion, per application per host/IP basis. If that&rsquo;s not the case, then I guess I have to search for another one if I&rsquo;d ever go back to windows (which will probably never happen anyway). So what about Linux?</p>
<p>Linux has all these great tools, is open source and has a great community so it surely has something similar, right? Well&hellip; It turns out there isn&rsquo;t one like Little Snitch. Linux enthusiasts might be shouting things like &ldquo;USE UFW!&rdquo; or &ldquo;WHAT ABOUT IPTABLES?!&rdquo; at me, but those tools don&rsquo;t really solve the problem, do they? I mean, they do a pretty good job a <em>trying</em> what I want to have, but there are still problems. UFW, as far as I&rsquo;m concerned, only blocks ports and IPs in general, not on a per application basis. This might be enough to block malicious ports or only allow HTTP traffic through, but I might want to limit usage of HTTP traffic for certain applications. Having to write it down into a file manually isn&rsquo;t really nice either, but that&rsquo;s not really too much of a problem, given at least for this there are tools like GUFW that would be easier to use. It wouldn&rsquo;t really bother me if I had Little Snitch for Linux but only needed to write the rules manually into a file because ultimately this is pretty much a one-time-never-again task, so it doesn&rsquo;t really bother me as long as I get the result I wanted.</p>
<p>Moving on to other approaches there&rsquo;s Douane for example. Let&rsquo;s disregard the fact that it either crashed my system or didn&rsquo;t even run for a moment, because I&rsquo;d also happily spend some hours fixing it if it would be the solution to my problem, but it sadly isn&rsquo;t. Douane filters on a per application basis, which is cool, but disregards the rest. This would be fine, for webbrowsers and multiplayer games, as I won&rsquo;t end up doing fine grained rules for those anyway, but that would only cover about 3% or less of the applications I&rsquo;m using, so its pretty much useless as well. It looks nice, I give it that, but that doesn&rsquo;t really help too much.</p>
<p>Lastly, iptables. Pretty much as close to the goal as you can be, but it doesn&rsquo;t quite reach it. So it does allow me to set rules per IP and port while also letting me specify the owner/process that this rule applies to. This is what I want right? Not quite. First, I can&rsquo;t anticipate what IPs the application will connect to, so I would just get an error from the application and would not be able to whitelist the IP in the table. Or I would have to whitelist all connections and then check for the IPs to blacklist/whitelist - not ideal. Secondly, no hostnames/domain. You can&rsquo;t expect me to go back to the table after a month and still be able to identify which IP is corresponding to which domain. The IP behind a domains don&rsquo;t change often, but they still can and I certainly don&rsquo;t want to be in the need of updating my rules just because the IP behind a domain updated and thus iptables would block the connections.</p>
<p>I might be too nitpicky or just making up problems that don&rsquo;t look like them for other people, but I do care a bit more about my privacy and security, given this is less of a security fix. And caring about your privacy is becoming more and more important in this age and I think this is something to address. I would like to do this myself, but I don&rsquo;t have the resources the do it. I lack knowledge in the Linux kernel, my c/c++ is almost not existing and I barely got time work on a bigger project outside of uni/work. So if you have a solution to my needs/problem I&rsquo;d be really really grateful if you could tell me (email/twitter), because I would be love to switch to Linux, but without this, I really can&rsquo;t. Thank you.</p>
]]></content></item><item><title>The world we live in</title><link>https://blog.eternalwings.de/posts/2015-03-18-the-world-we-live-in/</link><pubDate>Wed, 18 Mar 2015 22:03:50 +0100</pubDate><guid>https://blog.eternalwings.de/posts/2015-03-18-the-world-we-live-in/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>Sometimes I wonder, what do people write about? Todays events? Discussion topics? Crazy stories that no one would ever believe? I don&rsquo;t feel like writing about such things. Because the world we live in is crazy enough already. Just think about it, how many of our own planet we have yet to discover. What kind of animals have lived on this planet to this very day and how many will live for long after. The is so much to discover even just on the planet we all live on. So what if take a look at things a bit further away, like the moon. Have we discovered everything about it yet? We might, we might not.</p>
<p>How about other planets? The mars? Certainly have a lot still to discover. And the sun? Sure, we&rsquo;ll not going to land there any time soon, if at all, but we might find something throws out our current understand of where it gets all the energy (given our current understanding seems to be pretty reasonable). But those planets/stars are just in our planetary system. Around us are more than just one or two other systems, there are millions, trillion or even an infinite amount of other systems. This is crazy and scary. But I would say that it is the most interesting thing of our time, maybe even the most interesting thing for decades or centuries to come. Because we know neither much about the biggest parts about the universe nor about the smallest.</p>
<p>We have theories for many things, but they are still just theories. We are not exactly sure yet. We don&rsquo;t even know if there is just this one universe or if there are many like it. We don&rsquo;t know the size of the universe of if it&rsquo;s actually infinite. And this bothers me. Alot. What if there is other forms of life somewhere or if we are actually alone in this enormous dark space. Both are equally scary, yet interesting and I want to know. In theory, if the universe actually IS infinite, it would repeat itself at some point, because the parts which make up atoms, particles and, at the end of the day, even us, would end up in a constellation that already existed somewhere else. This would, in theory, mean that the state the world, the people, the galaxy and all the plantes and stars we are currently aware of would exist somewhere else in the universe. And there might be a &ldquo;copy&rdquo; of this world where you were not born and one where you are the last person alive.</p>
<p>But there are other things that we know exist but haven&rsquo;t really found yet. Dark matter or dark energy for example. These things go against our current understanding of how everything works, but we know that something like them actually exists. We know that they&rsquo;re there, because how would we explain that the universe seems to be expanding without transforming the energy it is using? It&rsquo;s like &ldquo;Why can this enormous thing keep moving while I need to refuel my car every now and then?&rdquo;</p>
<p>But what I think about the most is: &ldquo;What is outside of the universe?&rdquo;. I mean right, if the universe is infinite the might not be something like the &ldquo;outside&rdquo; of it. But given the possiblity that it actually is finite and has and end somewhere, what is on the other side? I know this question is like asking from inside a cardboard box what would be on the outside, but wouldn&rsquo;t people wonder the same? Is this universe just a part of another &ldquo;uni-universe&rdquo;? So if we somehow manage to get out what would it be like? Right, we don&rsquo;t have answers for these questions. Not yet at least. But I certainly hope we will at some point in the future, probably not in my lifetime, which is not necessarily bad. Because I think having questions on your mind gets you to new ideas, which is great. And bending your mind to the edge of possibilities is also a good excercise I would say.</p>
<p>Even though I had no intention that this &ldquo;article&rdquo; provokes anything in you, I would be really happy if you started to wrapp your mind around some of these questions so they might get answered one day, maybe even by you or me :) Have a nice day!</p>
]]></content></item><item><title>I Just Feel Like Writing About This</title><link>https://blog.eternalwings.de/posts/2015-01-16-i-just-feel-like-writing-about-this/</link><pubDate>Fri, 16 Jan 2015 13:02:34 +0100</pubDate><guid>https://blog.eternalwings.de/posts/2015-01-16-i-just-feel-like-writing-about-this/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>The title doesn&rsquo;t really give anything away about the content, so what is it about? So I watched a TED talk the other day from Susan Cain, &ldquo;The power of introverts&rdquo;, and she also touches the topic about introverts in school. I just want to give my experience on this topic, not about introverts in school, but in university.</p>
<p>I would consider myself an introvert right now, however, when I was younger I wasn&rsquo;t as introverted as I currently am. This was especially true in the first years of my secondary education, however, it started to shift as soon as I got into programming. Earlier, I was completely fine working in bigger groups and that pretty often. It wasn&rsquo;t too common in school, but it happened every now and then. So it was all nice and dandy until that point. But what changed when I got into programming?</p>
<p>When I started, I began with creating simple HTML pages (I know, this is not considered programming&hellip;), which felt like programming for me at the time (which was around the age of 13~14) and I had fun doing so. No one really helped me and I just tried things out by myself and educated myself. This isn&rsquo;t a big accomplishment on it&rsquo;s own and I certainly don&rsquo;t feel like it is. It&rsquo;s just like every other first step into a certain direction. But it wasn&rsquo;t just a first step of learning programming, it was also a first step into knowing how to teach myself.</p>
<p>But what about school? I was still in secondary education so shouldn&rsquo;t school be the one &ldquo;teaching&rdquo; me? The thing is, programming is not considered &ldquo;general knowledge&rdquo; here as of right now (I would at least take some ideas from it and integrate it into the curriculum somewhere, but that&rsquo;s another story). It&rsquo;s not what everybody needs to know to a big extend and it&rsquo;s just me who&rsquo;s having a bigger interest. Wait a minute, though. Not everyone will have interest in programming, I get that, but they certinaly will have interest in something else that is also not tought in school which might result in their job or something that they will really need in their later life. Again, that would also be too specific for the content of what the school is teaching. However, the process of learning something that you&rsquo;re interested in without someone helping you is a good and needed experience. Why? You certainly don&rsquo;t need this skill in school do you? Not really no, because that&rsquo;s not what school is about (it just teaches you the basic knowledge to understand other things). But everything that comes after that is relying on it.</p>
<p>Jump a bit forward in time, I&rsquo;m in my first semester of studying applied computer science. Been continuing to look more into programming throught the time in between. Trying out new languages to see new concepts, doing small projects to get some experience and read up on best practices and whatnot. Also, if you do a lot of programming, you will sometimes get into the position to learn more about the OS, memory and generally how things work in computer, so I had some knowledge of those things too. Because of all of this, the first semester was pretty easy, for me at least. I either already knew what the professors were talking about or would have something in mind that&rsquo;s similar to the problem they proposed (like OOP, binary system, logic, etc.). When I looked around at the other students, I could see several other people who are doing as great as I did, if not even better. But I also saw some people struggling. Not that they didn&rsquo;t like computer science, they just struggled learning or understanding the content.</p>
<p>So I looked at what they did to solve this -well- issue. I couldn&rsquo;t help but notice that most of them were relying on others, or more to the point, relying on the help of others. I mean, not an occassional small question when they really weren&rsquo;t able to figure it out, but actually relied on others to help them understand it several times. Some people might consider this as standard group learning, but I don&rsquo;t really feel the appeal of that. The problem is that this doesn&rsquo;t work in the long run as there won&rsquo;t always be people around you helping you get those things into your brain. The problem feels like they never really learned &ldquo;how&rdquo; to learn without someone else, who understood it, telling them.</p>
<p>Now, why did I focus so much on the fact that I&rsquo;m an introvert and introverts in general in the beginning? The thing is, since I, as an introvert, never really felt like I want to stay in groups for a long time, I was more often than not put in a situation where I was forced to figure out things on my own. This is the point where you start to train yourself how to learn new things. Sure, this might take time, but given I stayed alone many times, this wasn&rsquo;t too big of an issue. As I&rsquo;ve mentioned, by the time I came to university, I already teached myself most of the things we did in the first semester(s). This already helps in the lecture itself, how to sort the new information raining onto you, and these things most of the other people clearly lacked.</p>
<p>I mean, working in a group certainly has an advantage. Such as being able to get the opinion of several people and then working out the best way to do a certain task. On the other hand, being able to just focus on the problem, without other people possibly interrupting your thought is way more appealing for me. And I think this is what most other introverts will think too. I don&rsquo;t want to say that this &ldquo;superior&rdquo; in some way, I just think that when you get thrown into an unknown situation, it&rsquo;s easier to work with that situation when you know how to handle things. And since we&rsquo;re talking about school and university here, the situation you get thrown in when you come from secondary school to university is that you have to learn things yourself. It&rsquo;s not like the professors don&rsquo;t care how well you do at all, no (at least that&rsquo;s what it&rsquo;s like here). But they certainly care less than the teachers in school.</p>
<p>Coming to a close, I certainly don&rsquo;t want to say that &ldquo;Hey, introverts are so much better at this!&rdquo;. However, I do believe that to some extend people should be a bit more introvert at times. I mean sure, everyone thinks differently and might not be able to figure things out as well as I did for me, but hey, you might as well try. And given how much easier it felt for me when coming to university, I think it&rsquo;s definitely worth it.</p>
]]></content></item><item><title>GTA 5 Getting Pulled From the Shelves in Australia</title><link>https://blog.eternalwings.de/posts/2014-12-12-gta-5-getting-pulled-from-the-shelves-in-australia/</link><pubDate>Fri, 12 Dec 2014 12:56:36 +0100</pubDate><guid>https://blog.eternalwings.de/posts/2014-12-12-gta-5-getting-pulled-from-the-shelves-in-australia/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>&ndash; Disclaimer
There are a lot of posts about this on the internet already, spanning from well written ones to ones that try to defend the opinion with empty statements. This will be nothing more than a rant about what some peoples opinions are and generally my own one on the topic. You are free to agree and/or disagree with me or even critizise me in this regard, but be warned that I won&rsquo;t get into a discussion with you in anyway about this topic. It is possible that I might bring up the same argument as other people, but that&rsquo;s just the nature of rants. Also, this may contain mature content and heavy outrage, so take this into consideration before reading on. <br>
&ndash; Disclaimer end</p>
<p>I don&rsquo;t think I have to replay the situation again, because, as I have mentioned, there are enough articles out there already for this topic. So what is my take on it? I haven&rsquo;t played this game in particular, but I have played previous games from the same series so I know what the game is about, but I can&rsquo;t tell you anything about the exact storyline in this instance.</p>
<p>To make this short for you, here&rsquo;s my standpoint: It is completely fine for Target to remove a product from their shelves, but the reason why is completely and utterly, sorry, bullshit. I&rsquo;m not saying that Target should not listen to a petition made by alleged customers, because that would be wrong as well. However, the point where I think it is wrong is that the people who made the petition (also including those who signed it) either have a bad attitude towards games in general and thus come from a way too subjective standpoint or don&rsquo;t really understand how things work in games.</p>
<p>Because all I see in the petition and blog posts who support this opinion is always focused around the idea that you can &ldquo;murder&rdquo; prostitues to gain benefits (thus encouraging you to do so) and that they&rsquo;re portrayed as victims. There&rsquo;s more to it, but that&rsquo;s the gist I read from those posts.</p>
<p>But are they? I have yet to see an actual reference or citation for this where you can &ldquo;murder&rdquo; a prostitute (after you had sexual intercourse with her) IN A SPECIAL WAY. This is key: &ldquo;special way&rdquo;. Yes, you can kill them. But there are two things that are bound into this.</p>
<p>First, you can only kill them the same way you can kill any other NPC in the game, thus not treating them any different from literally ANYONE ELSE in the game.</p>
<p>Secondly, who tells you to kill them? The game itself doesn&rsquo;t. I have yet to see an instruction in the game where it says that you should kill prostitues after you had sex with them. You have the option, yes, but the decision is on your behalf and if you feel like you should do it, then the blame is on you, not the game. The game simply allows this because it allowed you to kill everyone else, which you seem to be ok with.</p>
<p>I don&rsquo;t see why the equality here would be anything but the right thing. In fact, everwhere else people want equality, now they get what they want and then it&rsquo;s still wrong? I don&rsquo;t get it.</p>
<p>Lets get to how they are depicted in the game and also compare it to how society outside of the virtual world is depciting them. Do you see a difference? I don&rsquo;t feel like they are depicted any differently in the game than in the &ldquo;real life&rdquo; society and I would blame the society here, not the game. Because the game just imitates the society we live in (and from what I&rsquo;ve seen so far, I think it does that pretty well). So blaming the game is like criticising the result and not the underlying issue, which you should do instead.</p>
<p>What I find more disturbing is that the petition claims that you can do things which are -BY LAW- not even allowed to be in a game that is getting sold in Australia. If those things would be in the game, the game would be indexed and not be allowed to be distributed to customers in the first place. Also, the game is already rated as 18+, which should tell you that the game may contain a lot of violence, sex and other such things. This is quite obviously saying: &ldquo;If you can&rsquo;t handle this, don&rsquo;t play it, YOU HAVE BEEN WARNED&rdquo;. If you still buy it and play it, it is, again, your own choice. If you go to a museum and look at a picture which displays the idea of burning women just because other people claim they&rsquo;re &ldquo;whitches&rdquo; it&rsquo;s fine as well right? Just because it&rsquo;s a videogame where you can interact with the environment yourself it is any different? HA, no. Unless the game forces you to do those things, which it obviously does not. So it&rsquo;s still all your own decisions and if you chose to do certain things, the only one to blame is yourself.</p>
<p>Last point I want to raise here is the fact that we&rsquo;re talking about a virtual world, a world that does not reflect back into our world and is completely made up. It might show similarities to our world, but that doesn&rsquo;t mean you have to take them that way. If you cannot distinguish between the virtual and real world, I&rsquo;m sorry, but then there is something wrong with you. If you let yourself get influenced by a game in such a way, then I would be really worried about your general reasoning abilities. Because I&rsquo;m pretty sure, books can have the same effect, yet maybe to a lesser extend, yet nobody is worrying about that.</p>
<p>But lets go over to the response from the Take-Two CEO because his main point is what I find a really good response. &ldquo;It&rsquo;s one thing for someone to not want to buy a piece of content, which is completely understandable. [&hellip;] And that&rsquo;s really the solution. If you don&rsquo;t like it and it&rsquo;s offensive to you, then you don&rsquo;t buy it.&rdquo; I think this is not only a good response but the solution to the problem. If you don&rsquo;t like a game, why would you bother buying it? If a game is bad or horrible and people won&rsquo;t buy it, it already tells the developer/publisher enough about the product they made. There&rsquo;s no reason to overreact and also shout in their face that they should feel bad. &ldquo;Are you telling me to ignore the &lsquo;issue&rsquo; at hand?&rdquo; By now, it should be pretty clear that I would not consider GTA 5 to be any kind of issue contrary to what the people wanted to express with the petition. This is not like a law that was forced upon you and thus making the situation completely different, it was made an issue because you chose to make it an issue of yours even though you had the choice to not be affected by it.</p>
]]></content></item><item><title>What Is This?</title><link>https://blog.eternalwings.de/posts/2014-12-11-what-is-this/</link><pubDate>Thu, 11 Dec 2014 10:42:34 +0100</pubDate><guid>https://blog.eternalwings.de/posts/2014-12-11-what-is-this/</guid><description>&amp;lt;no value&amp;gt;</description><content type="text/html" mode="escaped"><![CDATA[<p>This is, as you might&rsquo;ve noticed, something that looks like a blog, doesn&rsquo;t it? Well, it is indeed some form of blog, but don&rsquo;t expect it to have (continuously) new content on it. I tend to forget such things pretty easily and then I found something new and get rid of the old stuff&hellip; Which might be somewhat sad but I just like to try out all the new things.</p>
<p>So what do I do in my daily life? And what would I put here? Um, nothing and everything seems like a bad but fitting answer. I kind of want to write more just to get better and used to it, so I might just rant about something that doesn&rsquo;t make any sense to just feel like having done something. I might also just put up some results I found when working with some kind of framework that I tried out. Or you might even find a solution to an issue you have with X application that, for whatever reason, I also have and fixed. So basically, I don&rsquo;t know what I, in the end, will put up here. I honestly don&rsquo;t expect someone to read anything that I push up here, either because it is completely boring or generally badly written.</p>
<p>When you have come this far, you are either actually interested or everything else is even more boring than this (which I would find pretty unusual), so why don&rsquo;t I tell you something about myself? I&rsquo;m currently in university on my way to a bachelors degree in applied computer science. I also work in this field for the rest of the time at a company here in Germany. Been generally interested in programming and computers as soon as I had my first own computer. It&rsquo;s not like I ripped that thing apart as soon as I got it to see what kind of cool parts it had, but lets say I started slow. As probably every boy in my age (I&rsquo;m 19 right now), I also tend to play video games every now and then.</p>
<p>That&rsquo;s enough around me for the time being I think. More will probably shine through when I actually write things on this blog thingy.</p>
]]></content></item></channel></rss>