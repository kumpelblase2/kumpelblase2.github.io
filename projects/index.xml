<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Re: boot</title><link>https://blog.eternalwings.de/projects/</link><description>Recent content in Projects on Re: boot</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 16 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.eternalwings.de/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Skrillax</title><link>https://blog.eternalwings.de/projects/skrillax/</link><pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate><guid>https://blog.eternalwings.de/projects/skrillax/</guid><description>&lt;p>Rust seemed like a language worth exploring for me, as I wanted to have some more experience with &amp;ldquo;lower level&amp;rdquo; languages. My main languages so far had been Java and JavaScript/TypeScript, followed by only partial knowledge of many others. Almost all of them, however, were &amp;ldquo;high level&amp;rdquo; languages, i.e. are interpreted or run inside some bytecode VM. But because of all of these, I was accustomed to using generics, lambdas, and often had a big focus on type safety. When I tried C it really felt like I was treated like a toddler, who wasn&amp;rsquo;t yet allowed to play with the grown-up toys and instead had to be content with the few basic blocks they had. Go&amp;rsquo;s concurrency model was quite refreshing, but similarly felt incomplete due to having no generics at the time. Then there was Rust, the cool kid on the block now, having - on the surface - all of what I was looking for. Lots of resources too; blogs, videos, news. All within a similar-enough package to where a &amp;ldquo;hello world&amp;rdquo; was straight forward. But - obviously - a hello world is not enough to know a language.&lt;/p></description></item><item><title>Seeker</title><link>https://blog.eternalwings.de/projects/twitch-browse/</link><pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.eternalwings.de/projects/twitch-browse/</guid><description>&lt;p>&lt;a href="https://blog.eternalwings.de/seeker/">Live Version&lt;/a>&lt;/p>
&lt;p>Seeker is a project I started recently which should help people find new streams on &lt;a href="https://twitch.tv">Twitch&lt;/a>.&lt;/p>
&lt;h1 id="the-idea">The Idea&lt;a href="#the-idea" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;p>While Twitch does have a page to browse for the streams with currently the most viewers to find new streams, I found that page to be rather inadequate for that purpose. The reason is that for most people (including me) when they&amp;rsquo;re searching for new stuff to watch, they don&amp;rsquo;t reall know exactly what they&amp;rsquo;re looking for. Instead, I know what I&amp;rsquo;m &lt;em>not&lt;/em> looking for. For example, you can see this in the British parlament when they&amp;rsquo;re talking about Brexit. Jokes aside, I think this is a general problem that doesn&amp;rsquo;t only apply to finding a new streamer, but for any case where you have a lot of choices without any clear constraints (another example might be window shopping). You could go on and look through the whole page of streams, but why wouldn&amp;rsquo;t Twitch allow you to remove certain streams that &lt;em>you know&lt;/em> you won&amp;rsquo;t watch?&lt;/p></description></item><item><title>Vima</title><link>https://blog.eternalwings.de/projects/vima/</link><pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate><guid>https://blog.eternalwings.de/projects/vima/</guid><description>&lt;p>I have a big collection of videos that aren&amp;rsquo;t movies or series (educational videos for example) which I&amp;rsquo;d like to organize so I can search for specific ones, track progress or make notes. Sadly, the only kind of software that is in this space are &amp;ldquo;Media Servers&amp;rdquo;. I say &amp;ldquo;sadly&amp;rdquo; because those media servers are made for movies and tv shows where there&amp;rsquo;s public metadata available that a server can provide in addition to streaming the video itself. However, for videos that aren&amp;rsquo;t movies or shows, this rarely exists or isn&amp;rsquo;t easily queryable. Because I couldn&amp;rsquo;t find a software that satisfied my requirements, I started working on Vima.&lt;/p></description></item><item><title>Proxtop</title><link>https://blog.eternalwings.de/projects/proxtop/</link><pubDate>Fri, 25 Sep 2015 00:00:00 +0000</pubDate><guid>https://blog.eternalwings.de/projects/proxtop/</guid><description>&lt;p>Repository: &lt;a href="https://github.com/kumpelblase2/proxtop">Here&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/kumpelblase2/proxtop/master/static/assets/proxtop_logo_256.png" alt="Proxtop Logo">&lt;/p>
&lt;p>Proxtop evolved out of my desire to be notified of new anime episodes being available instead of manually having to check for new releases by going to the website. I had already done some small server side scripts that did this for me, but I thought that if I wanted to make this available to other people, a server application isn&amp;rsquo;t gonna cut it. You can see that project &lt;a href="https://github.com/kumpelblase2/proxer-watchlist-push">here&lt;/a>.&lt;/p></description></item></channel></rss>